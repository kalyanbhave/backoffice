//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18444.
// 
#pragma warning disable 1591

namespace SafeNetWS.NavService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="NavisionSoap", Namespace="http://navws-prd:7047/")]
    public partial class Navision : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback CreateCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomerInformationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomerMiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTravelerCostCenterOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateTravellerOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateCostCenterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPartnerTrackingListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPartnerTrackingInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUnusedCreditsActivatedCustOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTravelerUnusedCreditsOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertPaymentCardOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTravellerPaymentMeansOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetPaymentMeansOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletePaymentMeansOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRejectPaymentActionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTripDestinationAndClassOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMerchantAndEnhancedFlowOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPaymentCustomerReferenceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRoutingOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductSpecificInformationOperationCompleted;
        
        private System.Threading.SendOrPostCallback RunConnectivityTestOperationCompleted;
        
        private System.Threading.SendOrPostCallback EncryptTextNavisionOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Navision() {
            this.Url = global::SafeNetWS.Properties.Settings.Default.SafeNetWS_NavService_Navision;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event CreateCustomerCompletedEventHandler CreateCustomerCompleted;
        
        /// <remarks/>
        public event GetCustomerInformationCompletedEventHandler GetCustomerInformationCompleted;
        
        /// <remarks/>
        public event GetCustomerMiceCompletedEventHandler GetCustomerMiceCompleted;
        
        /// <remarks/>
        public event GetTravelerCostCenterCompletedEventHandler GetTravelerCostCenterCompleted;
        
        /// <remarks/>
        public event CreateTravellerCompletedEventHandler CreateTravellerCompleted;
        
        /// <remarks/>
        public event CreateCostCenterCompletedEventHandler CreateCostCenterCompleted;
        
        /// <remarks/>
        public event GetPartnerTrackingListCompletedEventHandler GetPartnerTrackingListCompleted;
        
        /// <remarks/>
        public event GetPartnerTrackingInfoCompletedEventHandler GetPartnerTrackingInfoCompleted;
        
        /// <remarks/>
        public event GetUnusedCreditsActivatedCustCompletedEventHandler GetUnusedCreditsActivatedCustCompleted;
        
        /// <remarks/>
        public event GetTravelerUnusedCreditsCompletedEventHandler GetTravelerUnusedCreditsCompleted;
        
        /// <remarks/>
        public event InsertPaymentCardCompletedEventHandler InsertPaymentCardCompleted;
        
        /// <remarks/>
        public event GetTravellerPaymentMeansCompletedEventHandler GetTravellerPaymentMeansCompleted;
        
        /// <remarks/>
        public event SetPaymentMeansCompletedEventHandler SetPaymentMeansCompleted;
        
        /// <remarks/>
        public event DeletePaymentMeansCompletedEventHandler DeletePaymentMeansCompleted;
        
        /// <remarks/>
        public event GetRejectPaymentActionCompletedEventHandler GetRejectPaymentActionCompleted;
        
        /// <remarks/>
        public event GetTripDestinationAndClassCompletedEventHandler GetTripDestinationAndClassCompleted;
        
        /// <remarks/>
        public event GetMerchantAndEnhancedFlowCompletedEventHandler GetMerchantAndEnhancedFlowCompleted;
        
        /// <remarks/>
        public event GetPaymentCustomerReferenceCompletedEventHandler GetPaymentCustomerReferenceCompleted;
        
        /// <remarks/>
        public event GetRoutingCompletedEventHandler GetRoutingCompleted;
        
        /// <remarks/>
        public event GetProductSpecificInformationCompletedEventHandler GetProductSpecificInformationCompleted;
        
        /// <remarks/>
        public event RunConnectivityTestCompletedEventHandler RunConnectivityTestCompleted;
        
        /// <remarks/>
        public event EncryptTextNavisionCompletedEventHandler EncryptTextNavisionCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://navws-prd:7047/CreateCustomer", RequestNamespace="http://navws-prd:7047/", ResponseNamespace="http://navws-prd:7047/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CreateCustomer(
                    string login, 
                    string password, 
                    string POS, 
                    string comcode, 
                    string comName, 
                    string comName2, 
                    string address, 
                    string address2, 
                    string city, 
                    string postCode, 
                    string countryCode, 
                    string email, 
                    string phone, 
                    string fax, 
                    string languageCode, 
                    int externalPrinting, 
                    bool deleteOnKDS, 
                    string comCodeTemplate, 
                    string companyCategory) {
            object[] results = this.Invoke("CreateCustomer", new object[] {
                        login,
                        password,
                        POS,
                        comcode,
                        comName,
                        comName2,
                        address,
                        address2,
                        city,
                        postCode,
                        countryCode,
                        email,
                        phone,
                        fax,
                        languageCode,
                        externalPrinting,
                        deleteOnKDS,
                        comCodeTemplate,
                        companyCategory});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateCustomerAsync(
                    string login, 
                    string password, 
                    string POS, 
                    string comcode, 
                    string comName, 
                    string comName2, 
                    string address, 
                    string address2, 
                    string city, 
                    string postCode, 
                    string countryCode, 
                    string email, 
                    string phone, 
                    string fax, 
                    string languageCode, 
                    int externalPrinting, 
                    bool deleteOnKDS, 
                    string comCodeTemplate, 
                    string companyCategory) {
            this.CreateCustomerAsync(login, password, POS, comcode, comName, comName2, address, address2, city, postCode, countryCode, email, phone, fax, languageCode, externalPrinting, deleteOnKDS, comCodeTemplate, companyCategory, null);
        }
        
        /// <remarks/>
        public void CreateCustomerAsync(
                    string login, 
                    string password, 
                    string POS, 
                    string comcode, 
                    string comName, 
                    string comName2, 
                    string address, 
                    string address2, 
                    string city, 
                    string postCode, 
                    string countryCode, 
                    string email, 
                    string phone, 
                    string fax, 
                    string languageCode, 
                    int externalPrinting, 
                    bool deleteOnKDS, 
                    string comCodeTemplate, 
                    string companyCategory, 
                    object userState) {
            if ((this.CreateCustomerOperationCompleted == null)) {
                this.CreateCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateCustomerOperationCompleted);
            }
            this.InvokeAsync("CreateCustomer", new object[] {
                        login,
                        password,
                        POS,
                        comcode,
                        comName,
                        comName2,
                        address,
                        address2,
                        city,
                        postCode,
                        countryCode,
                        email,
                        phone,
                        fax,
                        languageCode,
                        externalPrinting,
                        deleteOnKDS,
                        comCodeTemplate,
                        companyCategory}, this.CreateCustomerOperationCompleted, userState);
        }
        
        private void OnCreateCustomerOperationCompleted(object arg) {
            if ((this.CreateCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateCustomerCompleted(this, new CreateCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://navws-prd:7047/GetCustomerInformation", RequestNamespace="http://navws-prd:7047/", ResponseNamespace="http://navws-prd:7047/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetCustomerInformation(string login, string password, string POS, string comcode, ref Nav_CustomerInformation custInfo) {
            object[] results = this.Invoke("GetCustomerInformation", new object[] {
                        login,
                        password,
                        POS,
                        comcode,
                        custInfo});
            custInfo = ((Nav_CustomerInformation)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomerInformationAsync(string login, string password, string POS, string comcode, Nav_CustomerInformation custInfo) {
            this.GetCustomerInformationAsync(login, password, POS, comcode, custInfo, null);
        }
        
        /// <remarks/>
        public void GetCustomerInformationAsync(string login, string password, string POS, string comcode, Nav_CustomerInformation custInfo, object userState) {
            if ((this.GetCustomerInformationOperationCompleted == null)) {
                this.GetCustomerInformationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerInformationOperationCompleted);
            }
            this.InvokeAsync("GetCustomerInformation", new object[] {
                        login,
                        password,
                        POS,
                        comcode,
                        custInfo}, this.GetCustomerInformationOperationCompleted, userState);
        }
        
        private void OnGetCustomerInformationOperationCompleted(object arg) {
            if ((this.GetCustomerInformationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerInformationCompleted(this, new GetCustomerInformationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://navws-prd:7047/GetCustomerMice", RequestNamespace="http://navws-prd:7047/", ResponseNamespace="http://navws-prd:7047/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetCustomerMice(string login, string password, string POS, ref Nav_CustomerInformationMice custInfo) {
            object[] results = this.Invoke("GetCustomerMice", new object[] {
                        login,
                        password,
                        POS,
                        custInfo});
            custInfo = ((Nav_CustomerInformationMice)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomerMiceAsync(string login, string password, string POS, Nav_CustomerInformationMice custInfo) {
            this.GetCustomerMiceAsync(login, password, POS, custInfo, null);
        }
        
        /// <remarks/>
        public void GetCustomerMiceAsync(string login, string password, string POS, Nav_CustomerInformationMice custInfo, object userState) {
            if ((this.GetCustomerMiceOperationCompleted == null)) {
                this.GetCustomerMiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerMiceOperationCompleted);
            }
            this.InvokeAsync("GetCustomerMice", new object[] {
                        login,
                        password,
                        POS,
                        custInfo}, this.GetCustomerMiceOperationCompleted, userState);
        }
        
        private void OnGetCustomerMiceOperationCompleted(object arg) {
            if ((this.GetCustomerMiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerMiceCompleted(this, new GetCustomerMiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://navws-prd:7047/GetTravelerCostCenter", RequestNamespace="http://navws-prd:7047/", ResponseNamespace="http://navws-prd:7047/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetTravelerCostCenter(string login, string password, string POS, string comcode, string Percode, ref AnalyticalCode TravInfo) {
            object[] results = this.Invoke("GetTravelerCostCenter", new object[] {
                        login,
                        password,
                        POS,
                        comcode,
                        Percode,
                        TravInfo});
            TravInfo = ((AnalyticalCode)(results[0]));
        }
        
        /// <remarks/>
        public void GetTravelerCostCenterAsync(string login, string password, string POS, string comcode, string Percode, AnalyticalCode TravInfo) {
            this.GetTravelerCostCenterAsync(login, password, POS, comcode, Percode, TravInfo, null);
        }
        
        /// <remarks/>
        public void GetTravelerCostCenterAsync(string login, string password, string POS, string comcode, string Percode, AnalyticalCode TravInfo, object userState) {
            if ((this.GetTravelerCostCenterOperationCompleted == null)) {
                this.GetTravelerCostCenterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTravelerCostCenterOperationCompleted);
            }
            this.InvokeAsync("GetTravelerCostCenter", new object[] {
                        login,
                        password,
                        POS,
                        comcode,
                        Percode,
                        TravInfo}, this.GetTravelerCostCenterOperationCompleted, userState);
        }
        
        private void OnGetTravelerCostCenterOperationCompleted(object arg) {
            if ((this.GetTravelerCostCenterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTravelerCostCenterCompleted(this, new GetTravelerCostCenterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://navws-prd:7047/CreateTraveller", RequestNamespace="http://navws-prd:7047/", ResponseNamespace="http://navws-prd:7047/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateTraveller(
                    string login, 
                    string password, 
                    string POS, 
                    string travcode, 
                    string comcode, 
                    string travTitle, 
                    string travName, 
                    string travDirectPhone, 
                    string travDirectFax, 
                    string travMobilePhone, 
                    string travHomePhone, 
                    string languageCode, 
                    string email, 
                    string emailMode, 
                    string travFirstName, 
                    string travTempKey, 
                    string travCC1, 
                    string travCC2, 
                    string travCC3, 
                    string travCC4, 
                    string travCC5, 
                    string travCC1Id, 
                    string travCC2Id, 
                    int analyticalScope, 
                    bool isAccountant, 
                    bool isTravelDir, 
                    bool isOccasional, 
                    bool isVIP, 
                    bool deleteOnKDS) {
            object[] results = this.Invoke("CreateTraveller", new object[] {
                        login,
                        password,
                        POS,
                        travcode,
                        comcode,
                        travTitle,
                        travName,
                        travDirectPhone,
                        travDirectFax,
                        travMobilePhone,
                        travHomePhone,
                        languageCode,
                        email,
                        emailMode,
                        travFirstName,
                        travTempKey,
                        travCC1,
                        travCC2,
                        travCC3,
                        travCC4,
                        travCC5,
                        travCC1Id,
                        travCC2Id,
                        analyticalScope,
                        isAccountant,
                        isTravelDir,
                        isOccasional,
                        isVIP,
                        deleteOnKDS});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateTravellerAsync(
                    string login, 
                    string password, 
                    string POS, 
                    string travcode, 
                    string comcode, 
                    string travTitle, 
                    string travName, 
                    string travDirectPhone, 
                    string travDirectFax, 
                    string travMobilePhone, 
                    string travHomePhone, 
                    string languageCode, 
                    string email, 
                    string emailMode, 
                    string travFirstName, 
                    string travTempKey, 
                    string travCC1, 
                    string travCC2, 
                    string travCC3, 
                    string travCC4, 
                    string travCC5, 
                    string travCC1Id, 
                    string travCC2Id, 
                    int analyticalScope, 
                    bool isAccountant, 
                    bool isTravelDir, 
                    bool isOccasional, 
                    bool isVIP, 
                    bool deleteOnKDS) {
            this.CreateTravellerAsync(login, password, POS, travcode, comcode, travTitle, travName, travDirectPhone, travDirectFax, travMobilePhone, travHomePhone, languageCode, email, emailMode, travFirstName, travTempKey, travCC1, travCC2, travCC3, travCC4, travCC5, travCC1Id, travCC2Id, analyticalScope, isAccountant, isTravelDir, isOccasional, isVIP, deleteOnKDS, null);
        }
        
        /// <remarks/>
        public void CreateTravellerAsync(
                    string login, 
                    string password, 
                    string POS, 
                    string travcode, 
                    string comcode, 
                    string travTitle, 
                    string travName, 
                    string travDirectPhone, 
                    string travDirectFax, 
                    string travMobilePhone, 
                    string travHomePhone, 
                    string languageCode, 
                    string email, 
                    string emailMode, 
                    string travFirstName, 
                    string travTempKey, 
                    string travCC1, 
                    string travCC2, 
                    string travCC3, 
                    string travCC4, 
                    string travCC5, 
                    string travCC1Id, 
                    string travCC2Id, 
                    int analyticalScope, 
                    bool isAccountant, 
                    bool isTravelDir, 
                    bool isOccasional, 
                    bool isVIP, 
                    bool deleteOnKDS, 
                    object userState) {
            if ((this.CreateTravellerOperationCompleted == null)) {
                this.CreateTravellerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateTravellerOperationCompleted);
            }
            this.InvokeAsync("CreateTraveller", new object[] {
                        login,
                        password,
                        POS,
                        travcode,
                        comcode,
                        travTitle,
                        travName,
                        travDirectPhone,
                        travDirectFax,
                        travMobilePhone,
                        travHomePhone,
                        languageCode,
                        email,
                        emailMode,
                        travFirstName,
                        travTempKey,
                        travCC1,
                        travCC2,
                        travCC3,
                        travCC4,
                        travCC5,
                        travCC1Id,
                        travCC2Id,
                        analyticalScope,
                        isAccountant,
                        isTravelDir,
                        isOccasional,
                        isVIP,
                        deleteOnKDS}, this.CreateTravellerOperationCompleted, userState);
        }
        
        private void OnCreateTravellerOperationCompleted(object arg) {
            if ((this.CreateTravellerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateTravellerCompleted(this, new CreateTravellerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://navws-prd:7047/CreateCostCenter", RequestNamespace="http://navws-prd:7047/", ResponseNamespace="http://navws-prd:7047/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateCostCenter(string login, string password, string POS, string comcode, int analyticalRange, string analyticalCode, string identifier, bool isActive) {
            object[] results = this.Invoke("CreateCostCenter", new object[] {
                        login,
                        password,
                        POS,
                        comcode,
                        analyticalRange,
                        analyticalCode,
                        identifier,
                        isActive});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateCostCenterAsync(string login, string password, string POS, string comcode, int analyticalRange, string analyticalCode, string identifier, bool isActive) {
            this.CreateCostCenterAsync(login, password, POS, comcode, analyticalRange, analyticalCode, identifier, isActive, null);
        }
        
        /// <remarks/>
        public void CreateCostCenterAsync(string login, string password, string POS, string comcode, int analyticalRange, string analyticalCode, string identifier, bool isActive, object userState) {
            if ((this.CreateCostCenterOperationCompleted == null)) {
                this.CreateCostCenterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateCostCenterOperationCompleted);
            }
            this.InvokeAsync("CreateCostCenter", new object[] {
                        login,
                        password,
                        POS,
                        comcode,
                        analyticalRange,
                        analyticalCode,
                        identifier,
                        isActive}, this.CreateCostCenterOperationCompleted, userState);
        }
        
        private void OnCreateCostCenterOperationCompleted(object arg) {
            if ((this.CreateCostCenterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateCostCenterCompleted(this, new CreateCostCenterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://navws-prd:7047/GetPartnerTrackingList", RequestNamespace="http://navws-prd:7047/", ResponseNamespace="http://navws-prd:7047/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetPartnerTrackingList(string login, string password, string POS, ref Nav_PartnerTracking exportPartnerTracking) {
            object[] results = this.Invoke("GetPartnerTrackingList", new object[] {
                        login,
                        password,
                        POS,
                        exportPartnerTracking});
            exportPartnerTracking = ((Nav_PartnerTracking)(results[0]));
        }
        
        /// <remarks/>
        public void GetPartnerTrackingListAsync(string login, string password, string POS, Nav_PartnerTracking exportPartnerTracking) {
            this.GetPartnerTrackingListAsync(login, password, POS, exportPartnerTracking, null);
        }
        
        /// <remarks/>
        public void GetPartnerTrackingListAsync(string login, string password, string POS, Nav_PartnerTracking exportPartnerTracking, object userState) {
            if ((this.GetPartnerTrackingListOperationCompleted == null)) {
                this.GetPartnerTrackingListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPartnerTrackingListOperationCompleted);
            }
            this.InvokeAsync("GetPartnerTrackingList", new object[] {
                        login,
                        password,
                        POS,
                        exportPartnerTracking}, this.GetPartnerTrackingListOperationCompleted, userState);
        }
        
        private void OnGetPartnerTrackingListOperationCompleted(object arg) {
            if ((this.GetPartnerTrackingListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPartnerTrackingListCompleted(this, new GetPartnerTrackingListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://navws-prd:7047/GetPartnerTrackingInfo", RequestNamespace="http://navws-prd:7047/", ResponseNamespace="http://navws-prd:7047/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetPartnerTrackingInfo(string login, string password, string POS, int PartnerID, ref Nav_PartnerTrackingInfo exportPartnerTrackingInfo) {
            object[] results = this.Invoke("GetPartnerTrackingInfo", new object[] {
                        login,
                        password,
                        POS,
                        PartnerID,
                        exportPartnerTrackingInfo});
            exportPartnerTrackingInfo = ((Nav_PartnerTrackingInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetPartnerTrackingInfoAsync(string login, string password, string POS, int PartnerID, Nav_PartnerTrackingInfo exportPartnerTrackingInfo) {
            this.GetPartnerTrackingInfoAsync(login, password, POS, PartnerID, exportPartnerTrackingInfo, null);
        }
        
        /// <remarks/>
        public void GetPartnerTrackingInfoAsync(string login, string password, string POS, int PartnerID, Nav_PartnerTrackingInfo exportPartnerTrackingInfo, object userState) {
            if ((this.GetPartnerTrackingInfoOperationCompleted == null)) {
                this.GetPartnerTrackingInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPartnerTrackingInfoOperationCompleted);
            }
            this.InvokeAsync("GetPartnerTrackingInfo", new object[] {
                        login,
                        password,
                        POS,
                        PartnerID,
                        exportPartnerTrackingInfo}, this.GetPartnerTrackingInfoOperationCompleted, userState);
        }
        
        private void OnGetPartnerTrackingInfoOperationCompleted(object arg) {
            if ((this.GetPartnerTrackingInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPartnerTrackingInfoCompleted(this, new GetPartnerTrackingInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://navws-prd:7047/GetUnusedCreditsActivatedCust", RequestNamespace="http://navws-prd:7047/", ResponseNamespace="http://navws-prd:7047/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetUnusedCreditsActivatedCust(string login, string password, string POS, ref NAV_CustomerUnusedCredits exportCustomerUnusedCredits) {
            object[] results = this.Invoke("GetUnusedCreditsActivatedCust", new object[] {
                        login,
                        password,
                        POS,
                        exportCustomerUnusedCredits});
            exportCustomerUnusedCredits = ((NAV_CustomerUnusedCredits)(results[0]));
        }
        
        /// <remarks/>
        public void GetUnusedCreditsActivatedCustAsync(string login, string password, string POS, NAV_CustomerUnusedCredits exportCustomerUnusedCredits) {
            this.GetUnusedCreditsActivatedCustAsync(login, password, POS, exportCustomerUnusedCredits, null);
        }
        
        /// <remarks/>
        public void GetUnusedCreditsActivatedCustAsync(string login, string password, string POS, NAV_CustomerUnusedCredits exportCustomerUnusedCredits, object userState) {
            if ((this.GetUnusedCreditsActivatedCustOperationCompleted == null)) {
                this.GetUnusedCreditsActivatedCustOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUnusedCreditsActivatedCustOperationCompleted);
            }
            this.InvokeAsync("GetUnusedCreditsActivatedCust", new object[] {
                        login,
                        password,
                        POS,
                        exportCustomerUnusedCredits}, this.GetUnusedCreditsActivatedCustOperationCompleted, userState);
        }
        
        private void OnGetUnusedCreditsActivatedCustOperationCompleted(object arg) {
            if ((this.GetUnusedCreditsActivatedCustCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUnusedCreditsActivatedCustCompleted(this, new GetUnusedCreditsActivatedCustCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://navws-prd:7047/GetTravelerUnusedCredits", RequestNamespace="http://navws-prd:7047/", ResponseNamespace="http://navws-prd:7047/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetTravelerUnusedCredits(string login, string password, string POS, string comCode, string perCode, string travellerName, string travellerFirstName, string travellerTitle, string airLine, ref NAV_TravelerUnusedCredits exportTravellerUnusedCredits) {
            object[] results = this.Invoke("GetTravelerUnusedCredits", new object[] {
                        login,
                        password,
                        POS,
                        comCode,
                        perCode,
                        travellerName,
                        travellerFirstName,
                        travellerTitle,
                        airLine,
                        exportTravellerUnusedCredits});
            exportTravellerUnusedCredits = ((NAV_TravelerUnusedCredits)(results[0]));
        }
        
        /// <remarks/>
        public void GetTravelerUnusedCreditsAsync(string login, string password, string POS, string comCode, string perCode, string travellerName, string travellerFirstName, string travellerTitle, string airLine, NAV_TravelerUnusedCredits exportTravellerUnusedCredits) {
            this.GetTravelerUnusedCreditsAsync(login, password, POS, comCode, perCode, travellerName, travellerFirstName, travellerTitle, airLine, exportTravellerUnusedCredits, null);
        }
        
        /// <remarks/>
        public void GetTravelerUnusedCreditsAsync(string login, string password, string POS, string comCode, string perCode, string travellerName, string travellerFirstName, string travellerTitle, string airLine, NAV_TravelerUnusedCredits exportTravellerUnusedCredits, object userState) {
            if ((this.GetTravelerUnusedCreditsOperationCompleted == null)) {
                this.GetTravelerUnusedCreditsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTravelerUnusedCreditsOperationCompleted);
            }
            this.InvokeAsync("GetTravelerUnusedCredits", new object[] {
                        login,
                        password,
                        POS,
                        comCode,
                        perCode,
                        travellerName,
                        travellerFirstName,
                        travellerTitle,
                        airLine,
                        exportTravellerUnusedCredits}, this.GetTravelerUnusedCreditsOperationCompleted, userState);
        }
        
        private void OnGetTravelerUnusedCreditsOperationCompleted(object arg) {
            if ((this.GetTravelerUnusedCreditsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTravelerUnusedCreditsCompleted(this, new GetTravelerUnusedCreditsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://navws-prd:7047/InsertPaymentCard", RequestNamespace="http://navws-prd:7047/", ResponseNamespace="http://navws-prd:7047/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertPaymentCard(
                    string login, 
                    string password, 
                    string POS, 
                    string comCode, 
                    string perCode, 
                    string costCenter, 
                    string ExpirationDate, 
                    string Cardtype, 
                    string Description, 
                    int LodgedCard, 
                    string ServiceGroup, 
                    string UserCode, 
                    string Token, 
                    string TruncatedPan, 
                    string FirstCardReference, 
                    int OneOffCard, 
                    int ForceWarnings, 
                    string contextSource, 
                    string Context, 
                    [System.Xml.Serialization.XmlElementAttribute("InsertPaymentCard")] ref Nav_InsertPaymentCard InsertPaymentCard1) {
            object[] results = this.Invoke("InsertPaymentCard", new object[] {
                        login,
                        password,
                        POS,
                        comCode,
                        perCode,
                        costCenter,
                        ExpirationDate,
                        Cardtype,
                        Description,
                        LodgedCard,
                        ServiceGroup,
                        UserCode,
                        Token,
                        TruncatedPan,
                        FirstCardReference,
                        OneOffCard,
                        ForceWarnings,
                        contextSource,
                        Context,
                        InsertPaymentCard1});
            InsertPaymentCard1 = ((Nav_InsertPaymentCard)(results[0]));
        }
        
        /// <remarks/>
        public void InsertPaymentCardAsync(
                    string login, 
                    string password, 
                    string POS, 
                    string comCode, 
                    string perCode, 
                    string costCenter, 
                    string ExpirationDate, 
                    string Cardtype, 
                    string Description, 
                    int LodgedCard, 
                    string ServiceGroup, 
                    string UserCode, 
                    string Token, 
                    string TruncatedPan, 
                    string FirstCardReference, 
                    int OneOffCard, 
                    int ForceWarnings, 
                    string contextSource, 
                    string Context, 
                    Nav_InsertPaymentCard InsertPaymentCard1) {
            this.InsertPaymentCardAsync(login, password, POS, comCode, perCode, costCenter, ExpirationDate, Cardtype, Description, LodgedCard, ServiceGroup, UserCode, Token, TruncatedPan, FirstCardReference, OneOffCard, ForceWarnings, contextSource, Context, InsertPaymentCard1, null);
        }
        
        /// <remarks/>
        public void InsertPaymentCardAsync(
                    string login, 
                    string password, 
                    string POS, 
                    string comCode, 
                    string perCode, 
                    string costCenter, 
                    string ExpirationDate, 
                    string Cardtype, 
                    string Description, 
                    int LodgedCard, 
                    string ServiceGroup, 
                    string UserCode, 
                    string Token, 
                    string TruncatedPan, 
                    string FirstCardReference, 
                    int OneOffCard, 
                    int ForceWarnings, 
                    string contextSource, 
                    string Context, 
                    Nav_InsertPaymentCard InsertPaymentCard1, 
                    object userState) {
            if ((this.InsertPaymentCardOperationCompleted == null)) {
                this.InsertPaymentCardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertPaymentCardOperationCompleted);
            }
            this.InvokeAsync("InsertPaymentCard", new object[] {
                        login,
                        password,
                        POS,
                        comCode,
                        perCode,
                        costCenter,
                        ExpirationDate,
                        Cardtype,
                        Description,
                        LodgedCard,
                        ServiceGroup,
                        UserCode,
                        Token,
                        TruncatedPan,
                        FirstCardReference,
                        OneOffCard,
                        ForceWarnings,
                        contextSource,
                        Context,
                        InsertPaymentCard1}, this.InsertPaymentCardOperationCompleted, userState);
        }
        
        private void OnInsertPaymentCardOperationCompleted(object arg) {
            if ((this.InsertPaymentCardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertPaymentCardCompleted(this, new InsertPaymentCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://navws-prd:7047/GetTravellerPaymentMeans", RequestNamespace="http://navws-prd:7047/", ResponseNamespace="http://navws-prd:7047/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetTravellerPaymentMeans(string login, string password, string POS, string comCode, string perCode, string serviceGroup, string costCenter, ref Nav_PaymentMeans exportPaymentMeans) {
            object[] results = this.Invoke("GetTravellerPaymentMeans", new object[] {
                        login,
                        password,
                        POS,
                        comCode,
                        perCode,
                        serviceGroup,
                        costCenter,
                        exportPaymentMeans});
            exportPaymentMeans = ((Nav_PaymentMeans)(results[0]));
        }
        
        /// <remarks/>
        public void GetTravellerPaymentMeansAsync(string login, string password, string POS, string comCode, string perCode, string serviceGroup, string costCenter, Nav_PaymentMeans exportPaymentMeans) {
            this.GetTravellerPaymentMeansAsync(login, password, POS, comCode, perCode, serviceGroup, costCenter, exportPaymentMeans, null);
        }
        
        /// <remarks/>
        public void GetTravellerPaymentMeansAsync(string login, string password, string POS, string comCode, string perCode, string serviceGroup, string costCenter, Nav_PaymentMeans exportPaymentMeans, object userState) {
            if ((this.GetTravellerPaymentMeansOperationCompleted == null)) {
                this.GetTravellerPaymentMeansOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTravellerPaymentMeansOperationCompleted);
            }
            this.InvokeAsync("GetTravellerPaymentMeans", new object[] {
                        login,
                        password,
                        POS,
                        comCode,
                        perCode,
                        serviceGroup,
                        costCenter,
                        exportPaymentMeans}, this.GetTravellerPaymentMeansOperationCompleted, userState);
        }
        
        private void OnGetTravellerPaymentMeansOperationCompleted(object arg) {
            if ((this.GetTravellerPaymentMeansCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTravellerPaymentMeansCompleted(this, new GetTravellerPaymentMeansCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://navws-prd:7047/SetPaymentMeans", RequestNamespace="http://navws-prd:7047/", ResponseNamespace="http://navws-prd:7047/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetPaymentMeans(string login, string password, string POS, string comCode, string costCenter, string perCode, string serviceGroup, string means) {
            this.Invoke("SetPaymentMeans", new object[] {
                        login,
                        password,
                        POS,
                        comCode,
                        costCenter,
                        perCode,
                        serviceGroup,
                        means});
        }
        
        /// <remarks/>
        public void SetPaymentMeansAsync(string login, string password, string POS, string comCode, string costCenter, string perCode, string serviceGroup, string means) {
            this.SetPaymentMeansAsync(login, password, POS, comCode, costCenter, perCode, serviceGroup, means, null);
        }
        
        /// <remarks/>
        public void SetPaymentMeansAsync(string login, string password, string POS, string comCode, string costCenter, string perCode, string serviceGroup, string means, object userState) {
            if ((this.SetPaymentMeansOperationCompleted == null)) {
                this.SetPaymentMeansOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetPaymentMeansOperationCompleted);
            }
            this.InvokeAsync("SetPaymentMeans", new object[] {
                        login,
                        password,
                        POS,
                        comCode,
                        costCenter,
                        perCode,
                        serviceGroup,
                        means}, this.SetPaymentMeansOperationCompleted, userState);
        }
        
        private void OnSetPaymentMeansOperationCompleted(object arg) {
            if ((this.SetPaymentMeansCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetPaymentMeansCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://navws-prd:7047/DeletePaymentMeans", RequestNamespace="http://navws-prd:7047/", ResponseNamespace="http://navws-prd:7047/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeletePaymentMeans(string login, string password, string POS, string comCode, string costCenter, string perCode, string serviceGroup) {
            object[] results = this.Invoke("DeletePaymentMeans", new object[] {
                        login,
                        password,
                        POS,
                        comCode,
                        costCenter,
                        perCode,
                        serviceGroup});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeletePaymentMeansAsync(string login, string password, string POS, string comCode, string costCenter, string perCode, string serviceGroup) {
            this.DeletePaymentMeansAsync(login, password, POS, comCode, costCenter, perCode, serviceGroup, null);
        }
        
        /// <remarks/>
        public void DeletePaymentMeansAsync(string login, string password, string POS, string comCode, string costCenter, string perCode, string serviceGroup, object userState) {
            if ((this.DeletePaymentMeansOperationCompleted == null)) {
                this.DeletePaymentMeansOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletePaymentMeansOperationCompleted);
            }
            this.InvokeAsync("DeletePaymentMeans", new object[] {
                        login,
                        password,
                        POS,
                        comCode,
                        costCenter,
                        perCode,
                        serviceGroup}, this.DeletePaymentMeansOperationCompleted, userState);
        }
        
        private void OnDeletePaymentMeansOperationCompleted(object arg) {
            if ((this.DeletePaymentMeansCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletePaymentMeansCompleted(this, new DeletePaymentMeansCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://navws-prd:7047/GetRejectPaymentAction", RequestNamespace="http://navws-prd:7047/", ResponseNamespace="http://navws-prd:7047/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetRejectPaymentAction(string login, string password, string POS, string cardFormat, string rejectReason, string sharingType, ref NAV_RejectPayments exportRejectPayments) {
            object[] results = this.Invoke("GetRejectPaymentAction", new object[] {
                        login,
                        password,
                        POS,
                        cardFormat,
                        rejectReason,
                        sharingType,
                        exportRejectPayments});
            exportRejectPayments = ((NAV_RejectPayments)(results[0]));
        }
        
        /// <remarks/>
        public void GetRejectPaymentActionAsync(string login, string password, string POS, string cardFormat, string rejectReason, string sharingType, NAV_RejectPayments exportRejectPayments) {
            this.GetRejectPaymentActionAsync(login, password, POS, cardFormat, rejectReason, sharingType, exportRejectPayments, null);
        }
        
        /// <remarks/>
        public void GetRejectPaymentActionAsync(string login, string password, string POS, string cardFormat, string rejectReason, string sharingType, NAV_RejectPayments exportRejectPayments, object userState) {
            if ((this.GetRejectPaymentActionOperationCompleted == null)) {
                this.GetRejectPaymentActionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRejectPaymentActionOperationCompleted);
            }
            this.InvokeAsync("GetRejectPaymentAction", new object[] {
                        login,
                        password,
                        POS,
                        cardFormat,
                        rejectReason,
                        sharingType,
                        exportRejectPayments}, this.GetRejectPaymentActionOperationCompleted, userState);
        }
        
        private void OnGetRejectPaymentActionOperationCompleted(object arg) {
            if ((this.GetRejectPaymentActionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRejectPaymentActionCompleted(this, new GetRejectPaymentActionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://navws-prd:7047/GetTripDestinationAndClass", RequestNamespace="http://navws-prd:7047/", ResponseNamespace="http://navws-prd:7047/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTripDestinationAndClass(string login, string password, string POS, string documentNo, int entryNoSLE) {
            object[] results = this.Invoke("GetTripDestinationAndClass", new object[] {
                        login,
                        password,
                        POS,
                        documentNo,
                        entryNoSLE});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTripDestinationAndClassAsync(string login, string password, string POS, string documentNo, int entryNoSLE) {
            this.GetTripDestinationAndClassAsync(login, password, POS, documentNo, entryNoSLE, null);
        }
        
        /// <remarks/>
        public void GetTripDestinationAndClassAsync(string login, string password, string POS, string documentNo, int entryNoSLE, object userState) {
            if ((this.GetTripDestinationAndClassOperationCompleted == null)) {
                this.GetTripDestinationAndClassOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTripDestinationAndClassOperationCompleted);
            }
            this.InvokeAsync("GetTripDestinationAndClass", new object[] {
                        login,
                        password,
                        POS,
                        documentNo,
                        entryNoSLE}, this.GetTripDestinationAndClassOperationCompleted, userState);
        }
        
        private void OnGetTripDestinationAndClassOperationCompleted(object arg) {
            if ((this.GetTripDestinationAndClassCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTripDestinationAndClassCompleted(this, new GetTripDestinationAndClassCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://navws-prd:7047/GetMerchantAndEnhancedFlow", RequestNamespace="http://navws-prd:7047/", ResponseNamespace="http://navws-prd:7047/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetMerchantAndEnhancedFlow(string login, string password, string POS, string cardProviderCode, bool lodged, string cardBin, ref NAV_CardTypeProviders exportCardType) {
            object[] results = this.Invoke("GetMerchantAndEnhancedFlow", new object[] {
                        login,
                        password,
                        POS,
                        cardProviderCode,
                        lodged,
                        cardBin,
                        exportCardType});
            exportCardType = ((NAV_CardTypeProviders)(results[0]));
        }
        
        /// <remarks/>
        public void GetMerchantAndEnhancedFlowAsync(string login, string password, string POS, string cardProviderCode, bool lodged, string cardBin, NAV_CardTypeProviders exportCardType) {
            this.GetMerchantAndEnhancedFlowAsync(login, password, POS, cardProviderCode, lodged, cardBin, exportCardType, null);
        }
        
        /// <remarks/>
        public void GetMerchantAndEnhancedFlowAsync(string login, string password, string POS, string cardProviderCode, bool lodged, string cardBin, NAV_CardTypeProviders exportCardType, object userState) {
            if ((this.GetMerchantAndEnhancedFlowOperationCompleted == null)) {
                this.GetMerchantAndEnhancedFlowOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMerchantAndEnhancedFlowOperationCompleted);
            }
            this.InvokeAsync("GetMerchantAndEnhancedFlow", new object[] {
                        login,
                        password,
                        POS,
                        cardProviderCode,
                        lodged,
                        cardBin,
                        exportCardType}, this.GetMerchantAndEnhancedFlowOperationCompleted, userState);
        }
        
        private void OnGetMerchantAndEnhancedFlowOperationCompleted(object arg) {
            if ((this.GetMerchantAndEnhancedFlowCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMerchantAndEnhancedFlowCompleted(this, new GetMerchantAndEnhancedFlowCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://navws-prd:7047/GetPaymentCustomerReference", RequestNamespace="http://navws-prd:7047/", ResponseNamespace="http://navws-prd:7047/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetPaymentCustomerReference(string login, string password, string POS, string customerNo, string travellerNo, string provider, ref NAV_CustomerRefTranslates exportCustRef) {
            object[] results = this.Invoke("GetPaymentCustomerReference", new object[] {
                        login,
                        password,
                        POS,
                        customerNo,
                        travellerNo,
                        provider,
                        exportCustRef});
            exportCustRef = ((NAV_CustomerRefTranslates)(results[0]));
        }
        
        /// <remarks/>
        public void GetPaymentCustomerReferenceAsync(string login, string password, string POS, string customerNo, string travellerNo, string provider, NAV_CustomerRefTranslates exportCustRef) {
            this.GetPaymentCustomerReferenceAsync(login, password, POS, customerNo, travellerNo, provider, exportCustRef, null);
        }
        
        /// <remarks/>
        public void GetPaymentCustomerReferenceAsync(string login, string password, string POS, string customerNo, string travellerNo, string provider, NAV_CustomerRefTranslates exportCustRef, object userState) {
            if ((this.GetPaymentCustomerReferenceOperationCompleted == null)) {
                this.GetPaymentCustomerReferenceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPaymentCustomerReferenceOperationCompleted);
            }
            this.InvokeAsync("GetPaymentCustomerReference", new object[] {
                        login,
                        password,
                        POS,
                        customerNo,
                        travellerNo,
                        provider,
                        exportCustRef}, this.GetPaymentCustomerReferenceOperationCompleted, userState);
        }
        
        private void OnGetPaymentCustomerReferenceOperationCompleted(object arg) {
            if ((this.GetPaymentCustomerReferenceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPaymentCustomerReferenceCompleted(this, new GetPaymentCustomerReferenceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://navws-prd:7047/GetRouting", RequestNamespace="http://navws-prd:7047/", ResponseNamespace="http://navws-prd:7047/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetRouting(string login, string password, string POS, string documentNo, int entryNoSLE) {
            object[] results = this.Invoke("GetRouting", new object[] {
                        login,
                        password,
                        POS,
                        documentNo,
                        entryNoSLE});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetRoutingAsync(string login, string password, string POS, string documentNo, int entryNoSLE) {
            this.GetRoutingAsync(login, password, POS, documentNo, entryNoSLE, null);
        }
        
        /// <remarks/>
        public void GetRoutingAsync(string login, string password, string POS, string documentNo, int entryNoSLE, object userState) {
            if ((this.GetRoutingOperationCompleted == null)) {
                this.GetRoutingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRoutingOperationCompleted);
            }
            this.InvokeAsync("GetRouting", new object[] {
                        login,
                        password,
                        POS,
                        documentNo,
                        entryNoSLE}, this.GetRoutingOperationCompleted, userState);
        }
        
        private void OnGetRoutingOperationCompleted(object arg) {
            if ((this.GetRoutingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRoutingCompleted(this, new GetRoutingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://navws-prd:7047/GetProductSpecificInformation", RequestNamespace="http://navws-prd:7047/", ResponseNamespace="http://navws-prd:7047/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetProductSpecificInformation(string login, string password, string POS, string documentNo, int lineNo) {
            object[] results = this.Invoke("GetProductSpecificInformation", new object[] {
                        login,
                        password,
                        POS,
                        documentNo,
                        lineNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetProductSpecificInformationAsync(string login, string password, string POS, string documentNo, int lineNo) {
            this.GetProductSpecificInformationAsync(login, password, POS, documentNo, lineNo, null);
        }
        
        /// <remarks/>
        public void GetProductSpecificInformationAsync(string login, string password, string POS, string documentNo, int lineNo, object userState) {
            if ((this.GetProductSpecificInformationOperationCompleted == null)) {
                this.GetProductSpecificInformationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductSpecificInformationOperationCompleted);
            }
            this.InvokeAsync("GetProductSpecificInformation", new object[] {
                        login,
                        password,
                        POS,
                        documentNo,
                        lineNo}, this.GetProductSpecificInformationOperationCompleted, userState);
        }
        
        private void OnGetProductSpecificInformationOperationCompleted(object arg) {
            if ((this.GetProductSpecificInformationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductSpecificInformationCompleted(this, new GetProductSpecificInformationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://navws-prd:7047/RunConnectivityTest", RequestNamespace="http://navws-prd:7047/", ResponseNamespace="http://navws-prd:7047/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RunConnectivityTest(string login, string password) {
            object[] results = this.Invoke("RunConnectivityTest", new object[] {
                        login,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RunConnectivityTestAsync(string login, string password) {
            this.RunConnectivityTestAsync(login, password, null);
        }
        
        /// <remarks/>
        public void RunConnectivityTestAsync(string login, string password, object userState) {
            if ((this.RunConnectivityTestOperationCompleted == null)) {
                this.RunConnectivityTestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRunConnectivityTestOperationCompleted);
            }
            this.InvokeAsync("RunConnectivityTest", new object[] {
                        login,
                        password}, this.RunConnectivityTestOperationCompleted, userState);
        }
        
        private void OnRunConnectivityTestOperationCompleted(object arg) {
            if ((this.RunConnectivityTestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RunConnectivityTestCompleted(this, new RunConnectivityTestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://navws-prd:7047/EncryptTextNavision", RequestNamespace="http://navws-prd:7047/", ResponseNamespace="http://navws-prd:7047/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EncryptTextNavision(string login, string password, string POS, string valueToEncript) {
            object[] results = this.Invoke("EncryptTextNavision", new object[] {
                        login,
                        password,
                        POS,
                        valueToEncript});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EncryptTextNavisionAsync(string login, string password, string POS, string valueToEncript) {
            this.EncryptTextNavisionAsync(login, password, POS, valueToEncript, null);
        }
        
        /// <remarks/>
        public void EncryptTextNavisionAsync(string login, string password, string POS, string valueToEncript, object userState) {
            if ((this.EncryptTextNavisionOperationCompleted == null)) {
                this.EncryptTextNavisionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEncryptTextNavisionOperationCompleted);
            }
            this.InvokeAsync("EncryptTextNavision", new object[] {
                        login,
                        password,
                        POS,
                        valueToEncript}, this.EncryptTextNavisionOperationCompleted, userState);
        }
        
        private void OnEncryptTextNavisionOperationCompleted(object arg) {
            if ((this.EncryptTextNavisionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EncryptTextNavisionCompleted(this, new EncryptTextNavisionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/ExportCustomerInformation")]
    public partial class Nav_CustomerInformation {
        
        private Customer[] customerField;
        
        private NavException[] navExceptionField;
        
        private string[] textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Customer")]
        public Customer[] Customer {
            get {
                return this.customerField;
            }
            set {
                this.customerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("NavException")]
        public NavException[] NavException {
            get {
                return this.navExceptionField;
            }
            set {
                this.navExceptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/ExportCustomerInformation")]
    public partial class Customer {
        
        private string noField;
        
        private string nameField;
        
        private string addressField;
        
        private string address2Field;
        
        private string cityField;
        
        private string postCodeField;
        
        private string phoneNoField;
        
        private string faxNoField;
        
        private string[] allInBUPilotField;
        
        private string[] typeOfCustomerField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("No.")]
        public string No {
            get {
                return this.noField;
            }
            set {
                this.noField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        public string Address2 {
            get {
                return this.address2Field;
            }
            set {
                this.address2Field = value;
            }
        }
        
        /// <remarks/>
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string PostCode {
            get {
                return this.postCodeField;
            }
            set {
                this.postCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("PhoneNo.")]
        public string PhoneNo {
            get {
                return this.phoneNoField;
            }
            set {
                this.phoneNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("FaxNo.")]
        public string FaxNo {
            get {
                return this.faxNoField;
            }
            set {
                this.faxNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AllInBUPilot")]
        public string[] AllInBUPilot {
            get {
                return this.allInBUPilotField;
            }
            set {
                this.allInBUPilotField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("TypeOfCustomer")]
        public string[] TypeOfCustomer {
            get {
                return this.typeOfCustomerField;
            }
            set {
                this.typeOfCustomerField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="NavException", Namespace="urn:microsoft-dynamics-nav/xmlports/ExportCustomerRefTranslates")]
    public partial class NavException11 {
        
        private string[] navExceptionCodeField;
        
        private string[] navExceptionDescField;
        
        private string[] textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("NavExceptionCode")]
        public string[] NavExceptionCode {
            get {
                return this.navExceptionCodeField;
            }
            set {
                this.navExceptionCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("NavExceptionDesc")]
        public string[] NavExceptionDesc {
            get {
                return this.navExceptionDescField;
            }
            set {
                this.navExceptionDescField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/ExportCustomerRefTranslates")]
    public partial class NAV_CustomerRefTranslate {
        
        private string keyField;
        
        private string labelField;
        
        private string valueField;
        
        /// <remarks/>
        public string Key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        public string Label {
            get {
                return this.labelField;
            }
            set {
                this.labelField = value;
            }
        }
        
        /// <remarks/>
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/ExportCustomerRefTranslates")]
    public partial class NAV_CustomerRefTranslates {
        
        private NAV_CustomerRefTranslate[] nAV_CustomerRefTranslateField;
        
        private NavException11[] navExceptionField;
        
        private string[] textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("NAV_CustomerRefTranslate")]
        public NAV_CustomerRefTranslate[] NAV_CustomerRefTranslate {
            get {
                return this.nAV_CustomerRefTranslateField;
            }
            set {
                this.nAV_CustomerRefTranslateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("NavException")]
        public NavException11[] NavException {
            get {
                return this.navExceptionField;
            }
            set {
                this.navExceptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="NavException", Namespace="urn:microsoft-dynamics-nav/xmlports/ExportCardTypeProvider")]
    public partial class NavException10 {
        
        private string[] navExceptionCodeField;
        
        private string[] navExceptionDescField;
        
        private string[] textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("NavExceptionCode")]
        public string[] NavExceptionCode {
            get {
                return this.navExceptionCodeField;
            }
            set {
                this.navExceptionCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("NavExceptionDesc")]
        public string[] NavExceptionDesc {
            get {
                return this.navExceptionDescField;
            }
            set {
                this.navExceptionDescField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/ExportCardTypeProvider")]
    public partial class NAV_CardTypeProvider {
        
        private string cardTypeField;
        
        private string lodgedTypeField;
        
        private string bINField;
        
        private string financialFlowField;
        
        private string enhancedFlowField;
        
        private string onlineCheckField;
        
        /// <remarks/>
        public string CardType {
            get {
                return this.cardTypeField;
            }
            set {
                this.cardTypeField = value;
            }
        }
        
        /// <remarks/>
        public string LodgedType {
            get {
                return this.lodgedTypeField;
            }
            set {
                this.lodgedTypeField = value;
            }
        }
        
        /// <remarks/>
        public string BIN {
            get {
                return this.bINField;
            }
            set {
                this.bINField = value;
            }
        }
        
        /// <remarks/>
        public string FinancialFlow {
            get {
                return this.financialFlowField;
            }
            set {
                this.financialFlowField = value;
            }
        }
        
        /// <remarks/>
        public string EnhancedFlow {
            get {
                return this.enhancedFlowField;
            }
            set {
                this.enhancedFlowField = value;
            }
        }
        
        /// <remarks/>
        public string OnlineCheck {
            get {
                return this.onlineCheckField;
            }
            set {
                this.onlineCheckField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/ExportCardTypeProvider")]
    public partial class NAV_CardTypeProviders {
        
        private NAV_CardTypeProvider[] nAV_CardTypeProviderField;
        
        private NavException10[] navExceptionField;
        
        private string[] textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("NAV_CardTypeProvider")]
        public NAV_CardTypeProvider[] NAV_CardTypeProvider {
            get {
                return this.nAV_CardTypeProviderField;
            }
            set {
                this.nAV_CardTypeProviderField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("NavException")]
        public NavException10[] NavException {
            get {
                return this.navExceptionField;
            }
            set {
                this.navExceptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="NavException", Namespace="urn:microsoft-dynamics-nav/xmlports/ExportRejectPayment")]
    public partial class NavException9 {
        
        private string[] navExceptionCodeField;
        
        private string[] navExceptionDescField;
        
        private string[] textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("NavExceptionCode")]
        public string[] NavExceptionCode {
            get {
                return this.navExceptionCodeField;
            }
            set {
                this.navExceptionCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("NavExceptionDesc")]
        public string[] NavExceptionDesc {
            get {
                return this.navExceptionDescField;
            }
            set {
                this.navExceptionDescField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/ExportRejectPayment")]
    public partial class NAV_RejectPayment {
        
        private string rStatusField;
        
        private string[] rActionField;
        
        private string[] nbDaysField;
        
        private string[] rActionLabelField;
        
        /// <remarks/>
        public string RStatus {
            get {
                return this.rStatusField;
            }
            set {
                this.rStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("RAction")]
        public string[] RAction {
            get {
                return this.rActionField;
            }
            set {
                this.rActionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("NbDays")]
        public string[] NbDays {
            get {
                return this.nbDaysField;
            }
            set {
                this.nbDaysField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("RActionLabel")]
        public string[] RActionLabel {
            get {
                return this.rActionLabelField;
            }
            set {
                this.rActionLabelField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/ExportRejectPayment")]
    public partial class NAV_RejectPayments {
        
        private NAV_RejectPayment[] nAV_RejectPaymentField;
        
        private NavException9[] navExceptionField;
        
        private string[] textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("NAV_RejectPayment")]
        public NAV_RejectPayment[] NAV_RejectPayment {
            get {
                return this.nAV_RejectPaymentField;
            }
            set {
                this.nAV_RejectPaymentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("NavException")]
        public NavException9[] NavException {
            get {
                return this.navExceptionField;
            }
            set {
                this.navExceptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="NavException", Namespace="urn:microsoft-dynamics-nav/xmlports/ExportPaymentMeans")]
    public partial class NavException8 {
        
        private string[] navExceptionCodeField;
        
        private string[] navExceptionDescField;
        
        private string[] textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("NavExceptionCode")]
        public string[] NavExceptionCode {
            get {
                return this.navExceptionCodeField;
            }
            set {
                this.navExceptionCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("NavExceptionDesc")]
        public string[] NavExceptionDesc {
            get {
                return this.navExceptionDescField;
            }
            set {
                this.navExceptionDescField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/ExportPaymentMeans")]
    public partial class Card {
        
        private string[] cardTypeField;
        
        private string cardTokenField;
        
        private string expirationDateField;
        
        private string[] cardReferenceField;
        
        private string[] lodgedCardField;
        
        private string merchandFlowField;
        
        private string enhanceFlowField;
        
        private string truncatedPANField;
        
        private string[] onlineCheckField;
        
        private string[] textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("CardType")]
        public string[] CardType {
            get {
                return this.cardTypeField;
            }
            set {
                this.cardTypeField = value;
            }
        }
        
        /// <remarks/>
        public string CardToken {
            get {
                return this.cardTokenField;
            }
            set {
                this.cardTokenField = value;
            }
        }
        
        /// <remarks/>
        public string ExpirationDate {
            get {
                return this.expirationDateField;
            }
            set {
                this.expirationDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("CardReference")]
        public string[] CardReference {
            get {
                return this.cardReferenceField;
            }
            set {
                this.cardReferenceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("LodgedCard")]
        public string[] LodgedCard {
            get {
                return this.lodgedCardField;
            }
            set {
                this.lodgedCardField = value;
            }
        }
        
        /// <remarks/>
        public string MerchandFlow {
            get {
                return this.merchandFlowField;
            }
            set {
                this.merchandFlowField = value;
            }
        }
        
        /// <remarks/>
        public string EnhanceFlow {
            get {
                return this.enhanceFlowField;
            }
            set {
                this.enhanceFlowField = value;
            }
        }
        
        /// <remarks/>
        public string TruncatedPAN {
            get {
                return this.truncatedPANField;
            }
            set {
                this.truncatedPANField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("OnlineCheck")]
        public string[] OnlineCheck {
            get {
                return this.onlineCheckField;
            }
            set {
                this.onlineCheckField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/ExportPaymentMeans")]
    public partial class RequestedService {
        
        private string paymentTypeField;
        
        private string originField;
        
        private string[] serviceField;
        
        private string costCenterIDField;
        
        private Card[] cardField;
        
        private string requestedValueField;
        
        /// <remarks/>
        public string PaymentType {
            get {
                return this.paymentTypeField;
            }
            set {
                this.paymentTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Origin {
            get {
                return this.originField;
            }
            set {
                this.originField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Service")]
        public string[] Service {
            get {
                return this.serviceField;
            }
            set {
                this.serviceField = value;
            }
        }
        
        /// <remarks/>
        public string CostCenterID {
            get {
                return this.costCenterIDField;
            }
            set {
                this.costCenterIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Card")]
        public Card[] Card {
            get {
                return this.cardField;
            }
            set {
                this.cardField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string RequestedValue {
            get {
                return this.requestedValueField;
            }
            set {
                this.requestedValueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/ExportPaymentMeans")]
    public partial class Nav_PaymentMeans {
        
        private RequestedService[] requestedServiceField;
        
        private NavException8[] navExceptionField;
        
        private string[] textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("RequestedService")]
        public RequestedService[] RequestedService {
            get {
                return this.requestedServiceField;
            }
            set {
                this.requestedServiceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("NavException")]
        public NavException8[] NavException {
            get {
                return this.navExceptionField;
            }
            set {
                this.navExceptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="NavException", Namespace="urn:microsoft-dynamics-nav/xmlports/ExportPaymentCard")]
    public partial class NavException7 {
        
        private string[] navExceptionCodeField;
        
        private string[] navExceptionDescField;
        
        private string[] textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("NavExceptionCode")]
        public string[] NavExceptionCode {
            get {
                return this.navExceptionCodeField;
            }
            set {
                this.navExceptionCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("NavExceptionDesc")]
        public string[] NavExceptionDesc {
            get {
                return this.navExceptionDescField;
            }
            set {
                this.navExceptionDescField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/ExportPaymentCard")]
    public partial class InsertCardResult {
        
        private string cardReferenceField;
        
        private string merchandFlowField;
        
        private string enhancedFlowField;
        
        private string onlineCheckField;
        
        private string operationField;
        
        private string cardUsedByAnotherCustomerField;
        
        /// <remarks/>
        public string CardReference {
            get {
                return this.cardReferenceField;
            }
            set {
                this.cardReferenceField = value;
            }
        }
        
        /// <remarks/>
        public string MerchandFlow {
            get {
                return this.merchandFlowField;
            }
            set {
                this.merchandFlowField = value;
            }
        }
        
        /// <remarks/>
        public string EnhancedFlow {
            get {
                return this.enhancedFlowField;
            }
            set {
                this.enhancedFlowField = value;
            }
        }
        
        /// <remarks/>
        public string OnlineCheck {
            get {
                return this.onlineCheckField;
            }
            set {
                this.onlineCheckField = value;
            }
        }
        
        /// <remarks/>
        public string Operation {
            get {
                return this.operationField;
            }
            set {
                this.operationField = value;
            }
        }
        
        /// <remarks/>
        public string CardUsedByAnotherCustomer {
            get {
                return this.cardUsedByAnotherCustomerField;
            }
            set {
                this.cardUsedByAnotherCustomerField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/ExportPaymentCard")]
    public partial class Nav_InsertPaymentCard {
        
        private InsertCardResult[] insertCardResultField;
        
        private NavException7[] navExceptionField;
        
        private string[] textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("InsertCardResult")]
        public InsertCardResult[] InsertCardResult {
            get {
                return this.insertCardResultField;
            }
            set {
                this.insertCardResultField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("NavException")]
        public NavException7[] NavException {
            get {
                return this.navExceptionField;
            }
            set {
                this.navExceptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="NavException", Namespace="urn:microsoft-dynamics-nav/xmlports/ExportTravelerUnusedCredits")]
    public partial class NavException6 {
        
        private string[] navExceptionCodeField;
        
        private string[] navExceptionDescField;
        
        private string[] textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("NavExceptionCode")]
        public string[] NavExceptionCode {
            get {
                return this.navExceptionCodeField;
            }
            set {
                this.navExceptionCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("NavExceptionDesc")]
        public string[] NavExceptionDesc {
            get {
                return this.navExceptionDescField;
            }
            set {
                this.navExceptionDescField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/ExportTravelerUnusedCredits")]
    public partial class NAV_TravelerUnusedCredit {
        
        private string[] ticketNumberField;
        
        private string[] expiryDateField;
        
        private string percodeField;
        
        private string travelerNameField;
        
        private string airlineField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("TicketNumber")]
        public string[] TicketNumber {
            get {
                return this.ticketNumberField;
            }
            set {
                this.ticketNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ExpiryDate")]
        public string[] ExpiryDate {
            get {
                return this.expiryDateField;
            }
            set {
                this.expiryDateField = value;
            }
        }
        
        /// <remarks/>
        public string Percode {
            get {
                return this.percodeField;
            }
            set {
                this.percodeField = value;
            }
        }
        
        /// <remarks/>
        public string TravelerName {
            get {
                return this.travelerNameField;
            }
            set {
                this.travelerNameField = value;
            }
        }
        
        /// <remarks/>
        public string Airline {
            get {
                return this.airlineField;
            }
            set {
                this.airlineField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/ExportTravelerUnusedCredits")]
    public partial class NAV_TravelerUnusedCredits {
        
        private NAV_TravelerUnusedCredit[] nAV_TravelerUnusedCreditField;
        
        private NavException6[] navExceptionField;
        
        private string[] textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("NAV_TravelerUnusedCredit")]
        public NAV_TravelerUnusedCredit[] NAV_TravelerUnusedCredit {
            get {
                return this.nAV_TravelerUnusedCreditField;
            }
            set {
                this.nAV_TravelerUnusedCreditField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("NavException")]
        public NavException6[] NavException {
            get {
                return this.navExceptionField;
            }
            set {
                this.navExceptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="NavException", Namespace="urn:microsoft-dynamics-nav/xmlports/ExportUnusedCreditsActivCust")]
    public partial class NavException5 {
        
        private string[] navExceptionCodeField;
        
        private string[] navExceptionDescField;
        
        private string[] textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("NavExceptionCode")]
        public string[] NavExceptionCode {
            get {
                return this.navExceptionCodeField;
            }
            set {
                this.navExceptionCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("NavExceptionDesc")]
        public string[] NavExceptionDesc {
            get {
                return this.navExceptionDescField;
            }
            set {
                this.navExceptionDescField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/ExportUnusedCreditsActivCust")]
    public partial class NAV_Customer {
        
        private string comcodeField;
        
        /// <remarks/>
        public string Comcode {
            get {
                return this.comcodeField;
            }
            set {
                this.comcodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/ExportUnusedCreditsActivCust")]
    public partial class NAV_CustomerUnusedCredits {
        
        private NAV_Customer[] nAV_CustomerField;
        
        private NavException5[] navExceptionField;
        
        private string[] textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("NAV_Customer")]
        public NAV_Customer[] NAV_Customer {
            get {
                return this.nAV_CustomerField;
            }
            set {
                this.nAV_CustomerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("NavException")]
        public NavException5[] NavException {
            get {
                return this.navExceptionField;
            }
            set {
                this.navExceptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="NavException", Namespace="urn:microsoft-dynamics-nav/xmlports/ExportPartnerTrackingInfo")]
    public partial class NavException4 {
        
        private string[] navExceptionCodeField;
        
        private string[] navExceptionDescField;
        
        private string[] textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("NavExceptionCode")]
        public string[] NavExceptionCode {
            get {
                return this.navExceptionCodeField;
            }
            set {
                this.navExceptionCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("NavExceptionDesc")]
        public string[] NavExceptionDesc {
            get {
                return this.navExceptionDescField;
            }
            set {
                this.navExceptionDescField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/ExportPartnerTrackingInfo")]
    public partial class Sftp {
        
        private string serverField;
        
        private string loginField;
        
        private string keyField;
        
        private string[] textField;
        
        /// <remarks/>
        public string Server {
            get {
                return this.serverField;
            }
            set {
                this.serverField = value;
            }
        }
        
        /// <remarks/>
        public string Login {
            get {
                return this.loginField;
            }
            set {
                this.loginField = value;
            }
        }
        
        /// <remarks/>
        public string Key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="Partner", Namespace="urn:microsoft-dynamics-nav/xmlports/ExportPartnerTrackingInfo")]
    public partial class Partner1 {
        
        private string[] idField;
        
        private string nameField;
        
        private Sftp[] sftpField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ID")]
        public string[] ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Sftp")]
        public Sftp[] Sftp {
            get {
                return this.sftpField;
            }
            set {
                this.sftpField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/ExportPartnerTrackingInfo")]
    public partial class Nav_PartnerTrackingInfo {
        
        private Partner1[] partnerField;
        
        private NavException4[] navExceptionField;
        
        private string[] textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Partner")]
        public Partner1[] Partner {
            get {
                return this.partnerField;
            }
            set {
                this.partnerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("NavException")]
        public NavException4[] NavException {
            get {
                return this.navExceptionField;
            }
            set {
                this.navExceptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="NavException", Namespace="urn:microsoft-dynamics-nav/xmlports/ExportPartnerTrackingList")]
    public partial class NavException3 {
        
        private string[] navExceptionCodeField;
        
        private string[] navExceptionDescField;
        
        private string[] textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("NavExceptionCode")]
        public string[] NavExceptionCode {
            get {
                return this.navExceptionCodeField;
            }
            set {
                this.navExceptionCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("NavExceptionDesc")]
        public string[] NavExceptionDesc {
            get {
                return this.navExceptionDescField;
            }
            set {
                this.navExceptionDescField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/ExportPartnerTrackingList")]
    public partial class Partner {
        
        private string[] idField;
        
        private string nameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ID")]
        public string[] ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/ExportPartnerTrackingList")]
    public partial class Nav_PartnerTracking {
        
        private Partner[] partnerField;
        
        private NavException3[] navExceptionField;
        
        private string[] textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Partner")]
        public Partner[] Partner {
            get {
                return this.partnerField;
            }
            set {
                this.partnerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("NavException")]
        public NavException3[] NavException {
            get {
                return this.navExceptionField;
            }
            set {
                this.navExceptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="NavException", Namespace="urn:microsoft-dynamics-nav/xmlports/GetTravelerCostCenter")]
    public partial class NavException2 {
        
        private string[] navExceptionCodeField;
        
        private string[] navExceptionDescField;
        
        private string[] textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("NavExceptionCode")]
        public string[] NavExceptionCode {
            get {
                return this.navExceptionCodeField;
            }
            set {
                this.navExceptionCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("NavExceptionDesc")]
        public string[] NavExceptionDesc {
            get {
                return this.navExceptionDescField;
            }
            set {
                this.navExceptionDescField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/GetTravelerCostCenter")]
    public partial class Traveler_Info {
        
        private string perCodeField;
        
        private string percodeNameField;
        
        private string comcodeField;
        
        private string cC4Field;
        
        private string cC5Field;
        
        /// <remarks/>
        public string PerCode {
            get {
                return this.perCodeField;
            }
            set {
                this.perCodeField = value;
            }
        }
        
        /// <remarks/>
        public string PercodeName {
            get {
                return this.percodeNameField;
            }
            set {
                this.percodeNameField = value;
            }
        }
        
        /// <remarks/>
        public string Comcode {
            get {
                return this.comcodeField;
            }
            set {
                this.comcodeField = value;
            }
        }
        
        /// <remarks/>
        public string CC4 {
            get {
                return this.cC4Field;
            }
            set {
                this.cC4Field = value;
            }
        }
        
        /// <remarks/>
        public string CC5 {
            get {
                return this.cC5Field;
            }
            set {
                this.cC5Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/GetTravelerCostCenter")]
    public partial class AnalyticalCode {
        
        private Traveler_Info[] traveler_InfoField;
        
        private NavException2[] navExceptionField;
        
        private string[] textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Traveler_Info")]
        public Traveler_Info[] Traveler_Info {
            get {
                return this.traveler_InfoField;
            }
            set {
                this.traveler_InfoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("NavException")]
        public NavException2[] NavException {
            get {
                return this.navExceptionField;
            }
            set {
                this.navExceptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="NavException", Namespace="urn:microsoft-dynamics-nav/xmlports/ExportCustomerInformationMice")]
    public partial class NavException1 {
        
        private string[] navExceptionCodeField;
        
        private string[] navExceptionDescField;
        
        private string[] textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("NavExceptionCode")]
        public string[] NavExceptionCode {
            get {
                return this.navExceptionCodeField;
            }
            set {
                this.navExceptionCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("NavExceptionDesc")]
        public string[] NavExceptionDesc {
            get {
                return this.navExceptionDescField;
            }
            set {
                this.navExceptionDescField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="Customer", Namespace="urn:microsoft-dynamics-nav/xmlports/ExportCustomerInformationMice")]
    public partial class Customer1 {
        
        private string noField;
        
        private string nameField;
        
        private string addressField;
        
        private string address2Field;
        
        private string cityField;
        
        private string postCodeField;
        
        private string[] typeOfCustomerField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("No.")]
        public string No {
            get {
                return this.noField;
            }
            set {
                this.noField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        public string Address2 {
            get {
                return this.address2Field;
            }
            set {
                this.address2Field = value;
            }
        }
        
        /// <remarks/>
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string PostCode {
            get {
                return this.postCodeField;
            }
            set {
                this.postCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("TypeOfCustomer")]
        public string[] TypeOfCustomer {
            get {
                return this.typeOfCustomerField;
            }
            set {
                this.typeOfCustomerField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/ExportCustomerInformationMice")]
    public partial class Nav_CustomerInformationMice {
        
        private Customer1[] customerField;
        
        private NavException1[] navExceptionField;
        
        private string[] textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Customer")]
        public Customer1[] Customer {
            get {
                return this.customerField;
            }
            set {
                this.customerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("NavException")]
        public NavException1[] NavException {
            get {
                return this.navExceptionField;
            }
            set {
                this.navExceptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/ExportCustomerInformation")]
    public partial class NavException {
        
        private string[] navExceptionCodeField;
        
        private string[] navExceptionDescField;
        
        private string[] textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("NavExceptionCode")]
        public string[] NavExceptionCode {
            get {
                return this.navExceptionCodeField;
            }
            set {
                this.navExceptionCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("NavExceptionDesc")]
        public string[] NavExceptionDesc {
            get {
                return this.navExceptionDescField;
            }
            set {
                this.navExceptionDescField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void CreateCustomerCompletedEventHandler(object sender, CreateCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetCustomerInformationCompletedEventHandler(object sender, GetCustomerInformationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomerInformationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomerInformationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Nav_CustomerInformation custInfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Nav_CustomerInformation)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetCustomerMiceCompletedEventHandler(object sender, GetCustomerMiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomerMiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomerMiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Nav_CustomerInformationMice custInfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Nav_CustomerInformationMice)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetTravelerCostCenterCompletedEventHandler(object sender, GetTravelerCostCenterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTravelerCostCenterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTravelerCostCenterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AnalyticalCode TravInfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AnalyticalCode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void CreateTravellerCompletedEventHandler(object sender, CreateTravellerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateTravellerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateTravellerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void CreateCostCenterCompletedEventHandler(object sender, CreateCostCenterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateCostCenterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateCostCenterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetPartnerTrackingListCompletedEventHandler(object sender, GetPartnerTrackingListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPartnerTrackingListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPartnerTrackingListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Nav_PartnerTracking exportPartnerTracking {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Nav_PartnerTracking)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetPartnerTrackingInfoCompletedEventHandler(object sender, GetPartnerTrackingInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPartnerTrackingInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPartnerTrackingInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Nav_PartnerTrackingInfo exportPartnerTrackingInfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Nav_PartnerTrackingInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetUnusedCreditsActivatedCustCompletedEventHandler(object sender, GetUnusedCreditsActivatedCustCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUnusedCreditsActivatedCustCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUnusedCreditsActivatedCustCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NAV_CustomerUnusedCredits exportCustomerUnusedCredits {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NAV_CustomerUnusedCredits)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetTravelerUnusedCreditsCompletedEventHandler(object sender, GetTravelerUnusedCreditsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTravelerUnusedCreditsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTravelerUnusedCreditsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NAV_TravelerUnusedCredits exportTravellerUnusedCredits {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NAV_TravelerUnusedCredits)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void InsertPaymentCardCompletedEventHandler(object sender, InsertPaymentCardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertPaymentCardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertPaymentCardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Nav_InsertPaymentCard InsertPaymentCard1 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Nav_InsertPaymentCard)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetTravellerPaymentMeansCompletedEventHandler(object sender, GetTravellerPaymentMeansCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTravellerPaymentMeansCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTravellerPaymentMeansCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Nav_PaymentMeans exportPaymentMeans {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Nav_PaymentMeans)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SetPaymentMeansCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DeletePaymentMeansCompletedEventHandler(object sender, DeletePaymentMeansCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeletePaymentMeansCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeletePaymentMeansCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetRejectPaymentActionCompletedEventHandler(object sender, GetRejectPaymentActionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRejectPaymentActionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRejectPaymentActionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NAV_RejectPayments exportRejectPayments {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NAV_RejectPayments)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetTripDestinationAndClassCompletedEventHandler(object sender, GetTripDestinationAndClassCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTripDestinationAndClassCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTripDestinationAndClassCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetMerchantAndEnhancedFlowCompletedEventHandler(object sender, GetMerchantAndEnhancedFlowCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMerchantAndEnhancedFlowCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMerchantAndEnhancedFlowCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NAV_CardTypeProviders exportCardType {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NAV_CardTypeProviders)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetPaymentCustomerReferenceCompletedEventHandler(object sender, GetPaymentCustomerReferenceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPaymentCustomerReferenceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPaymentCustomerReferenceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NAV_CustomerRefTranslates exportCustRef {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NAV_CustomerRefTranslates)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetRoutingCompletedEventHandler(object sender, GetRoutingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRoutingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRoutingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetProductSpecificInformationCompletedEventHandler(object sender, GetProductSpecificInformationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductSpecificInformationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductSpecificInformationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void RunConnectivityTestCompletedEventHandler(object sender, RunConnectivityTestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RunConnectivityTestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RunConnectivityTestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void EncryptTextNavisionCompletedEventHandler(object sender, EncryptTextNavisionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EncryptTextNavisionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EncryptTextNavisionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591