TokenIsNotValid=El token [{0}] no es válido.
EmptyToken=El campo del token está vacío.
TokenIsNumeric=El token es un valor numérico.
TokenToShort=El token [{0}] no es válido, porque es demasiado corto.
TokenErrorChecking=Error al comprobar el token [{0}]. Error: {1}
NoPANFoundForToken=El token [{0}] no está registrado.
EmptyPAN=El campo del número de tarjeta está vacío.
PANNotDigits=El campo del número de tarjeta solo puede contener números.
UnvalidPAN=PAN [{0}] no es válido.
UnknownCardType= El tipo de tarjeta es desconocido.
LunhValidateError=Error al comprobar PAN. Excepción {0}
ExpiredPAN= Esta tarjeta (PAN = {0}) ha caducado.
InvalidExpirationDate= La fecha de caducidad [{0}] no es válida.
UserCanNotCreateProfilCard={0}, no puede crear la tarjeta de perfil.
UserCanNotCreateTransactionalCard={0}, no puede crear la tarjeta de transacción.
UserCanNotDisplayCardInLookupTool={0}, no puede ver una tarjeta en la herramienta de consulta.
UserCanNotEncryptCard={0}, no puede codificar el número de tarjeta.
UserCanNotEncryptFOCard={0}, no puede codificar el número de tarjeta.
UserCanNotProcessALookupInLookupTool={0}, no puede procesar una consulta en la herramienta de consulta.
UserCanNotProcessAReverseLookup=Usted {0}, no puede procesar una consulta inversa.
UserCanNotUpdateTokenAfterKeyRotation={0}, no puede actualizar el token después de la rotación.
UserDisplayCardLimitReached={0}, ha alcanzado el límite de la tarjeta de visualización ({1}). Inténtelo mañana.
EmptyLogin=Debe especificar una cuenta para la llamada.
EmptyPassword=Debe especificar una contraseña para la llamada.
ComcodeAndPercodeEmpty=Deben proporcionarse tanto el ComCode como el Percode.
PercodeEmpty=Debe especificar el percode.
UnvalidExpirationDate=La fecha de caducidad no es válida.
LDAPUnknownUser=No se pudo encontrar al usuario [{0}] en el directorio activo.
LDAPUnknownUserOrWrongPassword=El usuario [{0}] es desconocido o la contraseña es incorrecta.
LDAPConnectionError=Error al conectarse a LDAP con el usuario [{0}]. {1}
ComcodeEmpty=Falta el código de cliente.
ExpirationDateEmpty=Falta la fecha de caducidad.
TransactionalCardContextEmpty=Falta el contexto (número de billete o número de factura / memorando de crédito).
TransactionalCardPercodeEmpty=Falta el código de viajero.
SafeNet.CanNotFindKey=No se pudo encontrar la clave [{0}]. Error: {1}
SafeNet.NotAESKey=Se produjo un error: la clave [{0}] ya existe y no es una clave de AES. Error: {1}
SafeNet.UnexpectedError=Error al obtener la clave [{0}] de SafeNet. Error {1}
SafeNet.Error.Init=Error al iniciar [{0}] de SafeNet. Error: {1}
SafeNet.Error.ClosingSession=Error al cerrar NAESession. Error: {0}
SafeNet.Error.OpeningSession=Error al abrir la sesión de SafeNet del usuario [{0}]. Error: {1}
SafeNet.Error.Encrypting=Error al codificar datos. Error: {0}
SafeNet.Error.Decrypting=Error al descodificar datos. Error: {0}
KeyRotation.UserRequested=El usuario {0} solicitó una actualización de PAN después de una rotación de clave. Se encontraron los tokens {1}...
KeyRotation.ErrorUpdatingToken=¡Error! No se pudo actualizar PAN (después de una rotación de clave) para el token [{0}]; PAN [{1}]codificado. Error: {2}
KeyRotation.NothingToUpdate=El usuario {0} solicitó una actualización de PAN después de una rotación de clave. No hay nada que actualizar.
CheckTravellerForCustomer.CanNotFindTraveller=No se pudo encontrar al viajero con el código [{0}] ([{1}]) en la base de datos.
CheckTravellerForCustomer.TravellerDoNotBelongToCustomer=El viajero con el código [{0}] no pertenece al cliente con el código [{1}], sino [{2}].
CheckTravellerForCustomer.Error=Error al comprobar el viajero con el código [{0}] en la base de datos. Error: {1}
CheckCustomerForPos.CanNotFindCustomer=No se pudo encontrar al cliente con el código [{0}] en [{1}] en la base de datos.
CheckCustomerForPos.Error=Error al comprobar el cliente con el código [{0}] en la base de datos. Error: {1}
EncryptedDB.GetEncryptedPAN.ErrorGettingPAN=Error al obtener el PAN codificado del token [{0}]. Error: {1}
EncryptedDB.ErrorConnecting= Error al abrir la conexión de la base de datos [{0}]. Error: {1}
EncryptedDB.ErrorClosingConnection=Error al cerrar la conexión de la base de datos codificada. Error: {0}
EncryptedDB.GetToken.ErrorGettingToken=Error al obtener el token de la base de datos codificada. Error: {0}
EncryptedDB.GetAllTokens.Error=Error al obtener la lista de tokens aún sin actualizar después de la rotación de clave. Error: {0}
EncryptedDB.InsertEncryptedCard.Error=Error al insertar la tarjeta codificada. Error: {0}
EncryptedDB.UpdateEncryptedCard.Error=Error al actualizar después de la rotación de clave; Token=[{0}]: Error: {1}
EncryptedDB.SetRotationEnded.Error=Error al actualizar todo el estado después de la rotación de claves. Error: {0}
UserCanNotProcessALookupAndReverse=Usted ({0}) no puede procesar una consulta ni una consulta invertida.
NavisionDbConnection.ErrorConnecting=Error al abrir la conexión de la base de datos [{0}]. Error: {1}
NavisionDbConnection.ErrorClosingConnection=Error al cerrar la conexión de la base de datos de Navision. Error: {0}
NavisionDbConnection.GetPanInfos.PosMissing= No se pudo encontrar POS al obtener PAN para el token [{0}].
NavisionDbConnection.GetPanInfos.Error=Error al obtener PAN para el token [{0}] del POS [{1}]. Error: {2}
NavisionDbConnection.GetPosFromToken.Error=Error al obtener POS para el token [{0}]. Error: {1}
NavisionDbConnection.GetPosFromToken.Error.CanNotFindPos=No se pudo encontrar POS para el token [{0}].
NavisionDbConnection.CheckCardUsedForOtherCustomer.CardUsed=La tarjeta (token = {0}) utilizada por el cliente [{1}] como referencia [{2}] en [{3}].
NavisionDbConnection.GetPosFromCustomer.Error=Error al obtener POS del cliente [{0}]. Error: {1}
NavisionDbConnection.GetPosFromCustomer.ErrorGettingPOSs=Error al obtener la lista de POS de Navision. Error: {0}
NavisionDbConnection.GetPosFromCustomer.PosNotFound=No se pudo encontrar POS del cliente [{0}].
NavisionDbConnection.GetNextCardHistoryId.Error=Error al obtener el último id. utilizado de la tabla de tarjetas del historial en [{0}]. Error: {1}
NavisionDbConnection.GetEgenciaGeneralParameters.Error=Error al obtener parámetros generales en [{0}]. Error: {1}
NavisionDbConnection.InsertCard.Error=Error al insertar tarjeta en Navision. Cliente =[{0}]. Error: {1}
NavisionDbConnection.GetUserBookingPayment.Error=Error al obtener información sobre la tarjeta de pago. Cliente =[{0}], CC1 = [{1}], Viajero = [{2}], Servicio = [{3}]. Error: {4}
NavisionDbConnection.GetUserPaymentType.Error=Error al obtener el modo de pago. Cliente =[{0}], Viajero = [{1}], Servicio = [{2}]. Error: {3}
LdapAuthentication.Init.Error=Error al conectar a LDAP. Error: {0}
LdapAuthentication.GetGroups.Error=Error al obtener grupos de LDAP. Error: {0}
LdapAuthentication.Disconnect=Error al desconectar de LDAP. Error: {0}
Services.GetTokenFromPan.TokenNotFound=No se pudo encontrar PAN en la base de datos.
Services.RemoveDisplayPANCount.Error=Error al extraer archivos de la carpeta [{0}]. Error: {1}
Services.InsertCardInEncryptedDB.Error=Error al insertar PAN en la base de datos codificada. Error: {0}
Util.CheckSum.Error=Error en la suma de comprobación. {0} 
Util.GenerateToken.Error=Error al generar token. {0}
GetExtendedPanFromToken.PanNotAvailableInNavision=La tarjeta no existe en Navision.
SourceHostCantCallMethod= Usted ({0}) no puede invocar este método desde el host [{1}].
EncryptedFODB.DeleteCard.Error=Error al eliminar tarjeta con el token [{0}]. Error: {1}
EncryptedDB.SetTokensMapping.Error=Error al establecer la parte frontal del token [{0}] como la parte posterior del token [{1}]. Error: {2}
EncryptedDB.GetBOTokenFromMapping.Error=Error al obtener asignación para el token [{0}]. Error: {1}
Services.GetPanFromFOToken.FOTokenUnknow=No se pudo encontrar el token [{0}].
Services.GetPanFromFOToken.Error=Error al obtener tarjeta para el token [{0}]. Error: {1}
Services.GetRemainingFOCards.Error=Error al obtener las tarjetas restantes de la base de datos. Error {0}
CheckCC1ForCustomer.CanNotCC1=No se pudo encontrar el código analítico 1 [{0}] para el cliente [{1}].
CheckCC1ForCustomer.Error=Error al comprobar el centro de coste 1 [{0}]. Error: {1}
GetNavisionServiceGroup.UnknownService= El servicio [{0}] es desconocido.
UpdateEncryptedCard.UpdateEncryptedCard.Error=Error al actualizar la fecha de caducidad del token {0}. Error: {1}
HTTP.Error.ResponseStatusKO= Se produjo un error en la respuesta de HTTP. Estado: {0}
HTTP.Error.NoResponse= No se pudo encontrar la respuesta de HTTP.
CreditCardLogConnection.LogCard.Error=Error al insertar datos en la tabla de registro de tarjetas de crédito. Error: {0}
CreditCardLogConnection.ErrorConnecting=Error al abrir la conexión de la base de datos [{0}]. Error: {1}
CreditCardLogConnection.ErrorClosingConnection=Error al cerrar la conexión de la base de datos de registro. Error: {0}
PosEmpty=El campo de POS está vacío.
EncryptedDB.BulkLoadCard.Error=Error al insertar la tarjeta BulkLoad. {0}
Bibit.RejectedCard=Se rechazó la tarjeta [{0}].
CreditCardValidationResponse.InputValueEmpty=El campo del valor de entrada está vacío.
EncryptedDB.CacheBibitResponseStatus.Error=Error al detectar la respuesta de Bibit. {0}
EncryptedDB.GetCachedBibitResponseStatus.Error=Error al obtener el último estado para Bibit. {0}
EncryptedDB.UpdateBibitResponseStatus.Error=Error al detecta la respuesta de Bibit. {0}
UserBookingPaymentResponse.NoPaymentCardFound=No se encontró ninguna tarjeta de pago para el código de viajero [{0}], código de compañía [{1}], centro de coste [{2}] y servicio [{3}].
EncryptedDB.ClearBibitCache.Error=Error al borrar caché de Bibit. {0}
ValidateCCNumber.PANValid=El número de tarjeta es válido.
CardTypeNotAllowedByNavision=Navision no permite el tipo de tarjeta [{1}] para el PAN [{0}].
VPaymentIDEmpty=El campo de id, de VPayment está vacío.
VPaymentIDLenError=La longitud del id. de VPayment debe ser de 15 caracteres.
VPaymentIDInvalid=VPayment no válido.
NavisionDbConnection.InsertVPaymentID.Error=Error al guardar el id. de VPayment en la base de datos. {0}
NavisionDbConnection.InsertHistoryForCard.Error=Error al insertarlo en el historial. {0}
Services.ValidateVPaymentID.UnknownID=No se pudo encontrar Vpayment ID=[{0}] en el historial.
VPaymentGeneration.Error.MissingTravelerCode=Falta el código de viajero.
VPaymentGeneration.Error.MissingTravelerName=Falta el nombre del viajero.
VPaymentGeneration.Error.HotelDepartureDateMissing=Falta la fecha de salida del hotel.
VPaymentGeneration.Error.HotelDepartureDateInvalid=La fecha de salida del hotel no es válida.
VPaymentGeneration.Error.HotelArrivalDateMissing=Falta la fecha de llegada al hotel.
VPaymentGeneration.Error.HotelArrivalDateInvalid=La fecha de llegada al hotel no es válida.
VPaymentGeneration.Error.MissingPOS=Falta el punto de venta.
VPaymentGeneration.Error.MissingHotelType=Falta el tipo de hotel.
VPaymentGeneration.Error.MissingHotelName=Falta el nombre del hotel.
VPaymentGeneration.Error.MissingHotelCity=Falta la ciudad del hotel.
VPaymentGeneration.Error.MissingHotelZipCode=Falta el código postal del hotel.
VPaymentGeneration.Error.MissingCC1=Falta el centro de coste principal.
VPaymentGeneration.Error.MissingCC2=Falta el centro de coste secundario.
VPaymentGeneration.Error.BookingDateMissing=Falta la fecha de reserva.
VPaymentGeneration.Error.BookingDateInvalid=La fecha de reserva no es válida.
VPaymentGeneration.Error.MissingAIRCompany=Falta la línea aérea.
VPaymentGeneration.Error.MissingTripType=Falta el tipo de viaje.
VPaymentGeneration.Error.MissingDepartureFrom=Falta la ciudad de salida.
VPaymentGeneration.Error.MissingGoingTo=Falta la ciudad de llegada.
VPaymentGeneration.Error.DepartureDateMissing=Falta la fecha de salida.
VPaymentGeneration.Error.DepartureDateInvalid=La fecha de salida no es válida.
VPaymentGeneration.Error.ReturnDateMissing=Falta la fecha de vuelta.
VPaymentGeneration.Error.ReturnDateInvalid=La fecha de vuelta no es válida.
VPaymentGeneration.Error.MissingHotelCountry=Falta la fecha del país del hotel.
CheckVPaymentForCorporation.CanNotFindCorporation=No se pudo encontrar la corporación [{0}] en [{1}].
CheckVPaymentForCorporation.Error=Error al obtener datos de la corporación [{0}]. {1}
CheckVPaymentForCorporation.VPaymentNotAllowedForCorporation=El proveedor [{0}] no puede utilizar el número de tarjeta de Vpayment en [{1}], elija otro proveedor.
UnknownToken=[{0}] no es un token válido.
CheckGDSPaymentTypeForCorporation.CanNotFindCorporation=Can not find corporation [{0}] in [{1}]!
CheckGDSPaymentTypeForCorporation.Error=Error getting data for corporation [{0}]! {1}
CorporationEmpty= Corporation code is missing!
MailSender.Error.SendingMail=Error while sending mail to BackOffice support! {0}
MailSender.Error.SMTPConnectionError=SMTP error sending mail to admin! {0}
NotNumericCSC=Card security code (CSC) must be numeric!
MailSender.Error=Error while sending mail to admin! {0}
InvalidCSCLenght=Card security code (CSC) lenght is wrong!
InsertEgenciaEncryptedCard.Error=Error insertion encrypted PAN for token={0}! Error : {1}
LDAPUserNotBelongToGroup=User [{0}] do not belong to active directory group [{1}]
EmptyCSC=Card security code (CSC) is empty!
NavisionDbConnection.GetCardProvider.Error=Error getting provider card for card type {1} in {0}! Error : {2}
DeleteCardInNavision.EmptyCustomer=Customer is missing!
NavisionDbConnection.DeleteCard.CardNotFound.Error=We cannot find card (customer={0}, cc1={1}, traveler={2}, service={3})!
NavisionDbConnection.DeleteCard.Error=Error deleting card (customer={0}, cc1={1}, traveler={2}, service ={3})! Error : {4} 
DeleteCardInNavision.EmptyCardReference=Card reference is missing!
GDSPaymentTypeForCustomer.Error= Error getting data for customer [{0}]! {1}
CreditCardLogConnection.Test.Error=Error connecting to database. Error : {0}
CSCEmpty=Card security code is missing!
Services.GetPanFromEgenciaToken.EgenciaTokenUnknow=Token [{0}] is unknow!
EncryptedDB.ENettECNSave.Error=Error saving ENett ECE [{0}], Error : {1}
EncryptedDB.ENettECNRetrieve.Error=Error getting ENett ECE [{0}] from database; Error : {1}
EncryptedDB.CheckENettECN.Error=Error checking ENett ECE [{0}], Error : {1}
Services.SaveENettECN.Error=Requestor ECN [{0}] was already in the database!
Services.GetENettECN.UnknowECN=Requestor ENC [{0}] is unknown!
EncryptedDB.DeleteENettECN.Error=Error deleting requestor ECN [{0}], Error : {1}
NavisionSettingsConnection.ErrorConnecting=Error connecting to Navision settings database [{0]}]! Error : {1}
NavisionSettingsConnection.ErrorClosingConnection=Error closing Navision settings connection! Error : {1}
NavisionSettingsConnection.Test.Error=Error testing Navision settings database [{0}]! Error : {1}
VCardLogConnection.ErrorConnecting=Error connecting to VCard log database [{0}]! Error : {1}
VCardLogConnection.ErrorClosingConnection=Error closing VCard log connection! Error : {1}
VCardLogConnection.Check.Error=Error checking VPayment ID ={0} in the log table! Error : {1}
VCardLogConnection.Save.Error=Error saving VPayment ID ={0} in the log table! Error : {1}
VCardLogConnection.Test.Error=Error checking VCard log connection! Error : {1}
NavisionSettingsConnection.ErrorGettingConnString=Error getting Navision connection string for pos [{0}]! Error = {1}
PosUnknown=Pos [{0}] is unknown!
ComcodeInvalid=Comcode [{0}] is invalid!It must be numeric.
CostCenterInvalid=Cost center [{0}] is not numeric
PercodeInvalid=Traveller id [{0}] is not numeric
UnknowPOS=POS [{0}] is unknown!
CostCenterEmpty=Cost center is missing!